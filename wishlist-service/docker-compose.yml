services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - internal_net

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    container_name: wishlist_service
    environment:
      DATABASE_URL: ${DATABASE_URL} 
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    volumes:
      - ./:/app:rw
    ports:
      - "8009:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - internal_net
      - shared_network
      
networks:
  internal_net:
  # internal: true
    driver: bridge
  shared_network:
    driver: bridge
    name: shared_network

volumes:
  pgdata: