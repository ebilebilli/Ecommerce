services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - internal_net

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./:/app:rw
      - media:/app/user_service/media
      - staticfiles:/app/staticfiles
    ports:
      - "${WEB_PORT:-8005}:8000"
    networks:
      - internal_net
      - shared_network

  consumer:
    build: .
    depends_on:
      - db
      - web
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: Core.settings
      PYTHONPATH: /app
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
    volumes:
      - ./:/app:rw
    command: sh -c "cd /app && python events/consume_events.py"
    restart: unless-stopped
    networks:
      - internal_net
      - shared_network

volumes:
  pgdata:
  media:
  staticfiles:

networks:
  internal_net:
    driver: bridge
  shared_network:
    external: true
    name: shared_network
